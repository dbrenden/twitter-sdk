{:rename-macros {}, :renames {}, :use-macros {go cljs.core.async.macros}, :excludes #{get}, :name twitter-sdk.core, :imports nil, :requires {s cljs.spec, cljs.spec cljs.spec, clojure.spec cljs.spec, cljs.core.async cljs.core.async, r twitter-sdk.requests, twitter-sdk.requests twitter-sdk.requests}, :uses {<! cljs.core.async}, :defs {get {:protocol-inline nil, :meta {:file "/Users/brendendoyle/Development/twitter-sdk/src/twitter_sdk/core.cljs", :line 7, :column 7, :end-line 7, :end-column 10, :arglists (quote ([config path params]))}, :name twitter-sdk.core/get, :variadic false, :file "src/twitter_sdk/core.cljs", :end-column 10, :method-params ([config path params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 3, :fn-var true, :arglists (quote ([config path params]))}, post {:protocol-inline nil, :meta {:file "/Users/brendendoyle/Development/twitter-sdk/src/twitter_sdk/core.cljs", :line 10, :column 7, :end-line 10, :end-column 11, :arglists (quote ([config path params]))}, :name twitter-sdk.core/post, :variadic false, :file "src/twitter_sdk/core.cljs", :end-column 11, :method-params ([config path params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 3, :fn-var true, :arglists (quote ([config path params]))}, config {:protocol-inline nil, :meta {:file "/Users/brendendoyle/Development/twitter-sdk/src/twitter_sdk/core.cljs", :line 23, :column 7, :end-line 23, :end-column 13, :arglists (quote ([{:keys [consumer-key consumer-secret access-token-key access-token-secret], :as opts}]))}, :name twitter-sdk.core/config, :variadic false, :file "src/twitter_sdk/core.cljs", :end-column 13, :method-params ([p__49271]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [consumer-key consumer-secret access-token-key access-token-secret], :as opts}]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, s cljs.spec, cljs.spec cljs.spec, clojure.spec cljs.spec}, :cljs.analyzer/constants {:seen #{:req-un :opt-un cljs.spec/keys :cljs.spec/invalid :twitter-sdk.core/access-token-secret :gfn :access-token-key :pred-exprs :get :keys-pred :twitter-sdk.core/consumer-secret :opt-keys cljs.core/string? :req-specs cljs.core/contains? cljs.core/map? % :twitter-sdk.core/consumer-key :req :twitter/config :twitter-sdk.core/access-token-key :consumer-secret :req-keys cljs.core/fn :opt-specs :pred-forms :access-token-secret :consumer-key :opt}, :order [:get :twitter-sdk.core/consumer-key cljs.core/string? :twitter-sdk.core/consumer-secret :twitter-sdk.core/access-token-key :twitter-sdk.core/access-token-secret :twitter/config cljs.spec/keys :req-un :opt-un :gfn :pred-exprs :keys-pred :opt-keys :req-specs :req :req-keys :opt-specs :pred-forms :opt :consumer-key :consumer-secret :access-token-key :access-token-secret cljs.core/fn % cljs.core/map? cljs.core/contains? :cljs.spec/invalid]}, :doc nil}